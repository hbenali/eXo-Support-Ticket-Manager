/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entity.MetricsManager;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hba19
 */
public class Metrics extends javax.swing.JFrame {

    /**
     * Creates new form Metrics
     */
    public Metrics() {
        initComponents();
        initTable();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/exo.png")).getImage());
        this.setTitle("eXo Support Manager - Weekly Metrics");
    }

    private String[] getDifferences(String[] prev, String[] current) {
        String[] init = new String[prev.length];
        for (int i = 3; i < current.length; i++) {
            int diff = Integer.parseInt(current[i]) - Integer.parseInt(prev[i]);
            if (diff > 0) {
                init[i] = " ( +" + diff + " )";
            } else {
                init[i] = " ( " + diff + " )";
            }
        }
        return init;
    }

    private void initTable() {
        DefaultTableModel model = (DefaultTableModel) metricstable.getModel();
        MetricsManager mm = new MetricsManager();
        String[] metrics = mm.calculate();
        SimpleDateFormat sd = new SimpleDateFormat("YYYY-mm-dd");
        for (int i = 0; i < metrics.length; i++) {
            String[] item = metrics[i].split("\\|");
            String wk ="";
                wk = "19";
          
            if (i > 0) {
                String[] diff = getDifferences(metrics[i - 1].split("\\|"), item);
                model.addRow(new Object[]{wk+"W"+item[0], item[1], item[2], item[3] + diff[3], item[4] + diff[4], item[5] + diff[5], item[6] + diff[6], item[7] + diff[7]});

            } else {
                model.addRow(new Object[]{wk+"W"+item[0], item[1], item[2], item[3], item[4], item[5], item[6], item[7]});
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        metricstable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        metricstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Week NÂ°", "From", "To", "Open", "Considered", "W. Product Fix", "W. Information", "Closed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(metricstable);
        if (metricstable.getColumnModel().getColumnCount() > 0) {
            metricstable.getColumnModel().getColumn(0).setResizable(false);
            metricstable.getColumnModel().getColumn(0).setPreferredWidth(5);
            metricstable.getColumnModel().getColumn(1).setResizable(false);
            metricstable.getColumnModel().getColumn(2).setResizable(false);
            metricstable.getColumnModel().getColumn(3).setResizable(false);
            metricstable.getColumnModel().getColumn(4).setResizable(false);
            metricstable.getColumnModel().getColumn(5).setResizable(false);
            metricstable.getColumnModel().getColumn(6).setResizable(false);
            metricstable.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 929, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Metrics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Metrics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Metrics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Metrics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Metrics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable metricstable;
    // End of variables declaration//GEN-END:variables
}
